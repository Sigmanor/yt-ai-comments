name: Build and Release Extension

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'

jobs:
  build:
    name: Build Chrome and Firefox Extension
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' || github.event_name == 'push' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"

      - name: Install dependencies
        run: npm install

      - name: Prepare Chrome Extension
        run: |
          cp manifest/manifest-chrome.json src/manifest.json
          ./prepare-for-chrome.sh
          mkdir -p chrome/dist
          echo "$PEM" > private-key.pem
          google-chrome --pack-extension=src --pack-extension-key=private-key.pem
          mv src.crx chrome/dist/extension.crx

      - name: Prepare Firefox Extension
        run: |
          cp manifest/manifest-firefox.json src/manifest.json
          ./prepare-for-firefox.sh
          mkdir -p firefox/dist
          zip -r firefox/dist/extension.xpi src

      - name: Upload Chrome and Firefox artifacts
        uses: actions/upload-artifact@v4
        with:
          name: chrome-and-firefox-extensions
          path: |
            chrome/dist/extension.crx
            firefox/dist/extension.xpi

  release:
    name: Release Extension
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Configure Git
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"

      - name: Install dependencies
        run: npm install

      - name: Release
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          npx semantic-release --debug

      - name: Upload Chrome and Firefox Extensions to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            chrome/dist/extension.crx
            firefox/dist/extension.xpi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
